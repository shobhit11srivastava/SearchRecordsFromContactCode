
/*------APEX CLASS--*/
public class AccountWithContacts {
    @auraEnabled
    public static list<Contact> getAllAccounts(String searchCon){
        String viewName;
        List<Contact>  conList;
        String queryString = 'SELECT Id, LastName, Contact.Account.Name, AccountId FROM Contact ';
        if (String.isNotBlank(searchCon)) {
            searchCon = '%' + searchCon + '%';
            queryString = queryString + 'WHERE LastName LIKE :searchCon';
        }
        queryString = queryString + ' LIMIT 50';
        System.debug('-- queryString -- '+queryString);
        conList = Database.query(queryString); //[SELECT Id, LastName, Contact.Account.Name, AccountId From contact WHERE LastName LIKE : viewName LIMIT 1];
        System.debug('conList' +conList);
        return conList;
    }
}

/*----AURA COMPONENT-----*/
<aura:component controller ="AccountWithContacts" implements="flexipage:availableForRecordHome,force:hasRecordId,forceCommunity:availableForAllPageTypes"  access="global" >
    <aura:handler name="init" value="{!this}" action="{!c.fetchContacts}"/>
    <aura:attribute name="contactList" type="Contact[]" default="[]"/>
    <aura:attribute name="searchCon" type="String" access="public" default=""/>
    
    <form>
        <tr class="slds-text-title_caps">
            <th scope="col">
                <div align ="center">SEARCH CONTACTS</div>
            </th>
        </tr>
        <div>
            
            <lightning:input aura:id="searchCon" label="Search"
                             class="slds-input"
                             labelClass="slds-form-element__label"
                             value= "{!v.searchCon}"
                             onchange="{!c.fetchContacts}"
                             />
            
        </div>
    </form>
    <br />
    <table class="slds-table slds-table_bordered slds-table_cell-buffer">
        <thead>
            <tr class="slds-text-title_caps">
                <th scope="col">
                    <div >Contact Id</div>
                </th>
                <th scope="col">
                    <div >Last Name</div>
                </th>
                <th scope="col">
                    <div >Account Name</div>
                </th>
                <th scope="col">
                    <div >Account Id</div>
                </th>
            </tr>
        </thead>
        <tbody>
            <aura:iteration items="{!v.contactList}" var="con">
                <tr>
                    <td data-label="Contact Id">
                        <div>{!con.Id}</div>
                    </td>
                    <td data-label="Last Name">
                        <div>{!con.LastName}</div>
                    </td>
                    <td data-label="Account Name">
                        <div >{!con.Account.Name}</div>
                    </td>
                    <td data-label="Account Id">
                        <a href="{!'/'+con.AccountId}">
                            <div>{!con.AccountId}</div>
                        </a>
                    </td>
                </tr>
            </aura:iteration>
        </tbody>
    </table>    
    
</aura:component>

/*-----HELPER---*/

({
    fetchContactsRecords : function(component, event, helper) {
        
        console.log(component.get("v.searchCon"));
        
        var action = component.get("c.getAllAccounts");
        action.setParams({ "searchCon" : component.get("v.searchCon") });

        action.setCallback(this, function(response){
            var state = response.getState();
            if (state === "SUCCESS") {
                component.set("v.contactList", response.getReturnValue());
                
            }
        });
        $A.enqueueAction(action);
    }
})

/*-----JAVA SCRIPT--*/
({
    fetchContacts : function(component, event, helper) {
        helper.fetchContactsRecords(component, event, helper);
    }
})
